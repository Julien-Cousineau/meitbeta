user cousineauju;
worker_processes auto;
pid /run/nginx.pid;
 
events {
     worker_connections 768;
     # multi_accept on;
}

http {
  ##
  # Basic Settings
  ##
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;
  types_hash_max_size 2048;
  # server_tokens off;

  # server_names_hash_bucket_size 64;
  # server_name_in_redirect off;

  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  ##
  # Logging Settings
  ##

  access_log /var/log/nginx/access.log;
  error_log /var/log/nginx/error.log;

  server {
    listen 80;
    listen [::]:80;
    # Redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.
    # return 301 https://$host$request_uri;
    
    
    location / {
      proxy_pass http://127.0.0.1:8080;
      proxy_redirect off;
      #proxy_redirect http://localhost:8080 https://ec-meit.ca;
      proxy_set_header Host            $host;
      proxy_set_header X-Real-IP       $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-NginX-Proxy   true;
      proxy_set_header X-Forwarded-Proto $scheme;
    
      #proxy_buffering off;
      
      #For Websocket
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      
      #proxy_buffers               32 4m;
      #proxy_busy_buffers_size     25m;
      #proxy_buffer_size           512k;
      proxy_ignore_headers "Cache-Control" "Expires";
      proxy_max_temp_file_size    0;
      proxy_connect_timeout       300;
      proxy_read_timeout          300;
      proxy_send_timeout          300;
      proxy_intercept_errors      off;
    }
    
    location /upload {
      limit_except POST              { deny all; }
      client_body_temp_path          /data/;
      client_max_body_size    50G;
      client_body_buffer_size 128k;
      fastcgi_buffers 128   1M;
      sendfile              on;
      tcp_nopush on;
      tcp_nodelay on;
      keepalive_timeout 65;
      
      proxy_pass                     http://127.0.0.1:8080;
      proxy_redirect                 off;
    }
  }
  server {
    ####################################################################
    # SSL Stuff
    # https://mozilla.github.io/server-side-tls/ssl-config-generator/
    ####################################################################
    listen 443 http2 ssl;
    listen [::]:443 http2 ssl;
    server_name ec-meit-dev.ca;
    
    location ^~ /.well-known/acme-challenge/ {
    	default_type "text/plain";
    	root /etc/nginx/ssl;
    }
    
    # certs sent to the client in SERVER HELLO are concatenated in ssl_certificate
    ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
    ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;
    #ssl_certificate /etc/nginx/ssl/ECmeit.crt;
    #ssl_certificate_key /etc/nginx/ssl/ECmeit.key;
    #ssl_certificate /etc/nginx/ssl/fullchain.pem;
    #ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    #ssl on;
    #ssl_session_timeout 1d;

    # modern configuration. tweak to your needs.
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_ecdh_curve secp384r1;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
    #add_header Strict-Transport-Security max-age=15768000;
    add_header Strict-Transport-Security "max-age=63072000";
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    
    
    # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
    #ssl_dhparam /etc/ssl/certs/dhparam.pem;

    # OCSP Stapling ---
    # fetch OCSP records from URL in ssl_certificate and cache them
    ## verify chain of trust of OCSP response using Root CA and Intermediate certs
    #ssl_stapling on;
    #ssl_stapling_verify on;
    #ssl_trusted_certificate /etc/nginx/ssl/fullchain.pem;
    #resolver 8.8.8.8 8.8.4.4 valid=300s;
  	#resolver_timeout 5s;
    
    location / {
      proxy_pass http://localhost:8080;
      proxy_read_timeout  90;
      proxy_redirect off;
      #proxy_redirect http://localhost:8080 https://ec-meit.ca;
      proxy_set_header Host            $host;
      proxy_set_header X-Real-IP       $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-NginX-Proxy   true;
      proxy_set_header X-Forwarded-Proto $scheme;
    
      proxy_buffering off;
      
      #For Websocket
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      
    }
  }  
}